<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.6.3 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><b>sf</b>::<a class="el" href="classsf_1_1Drawable.htm">Drawable</a>
  </div>
</div>
<div class="contents">
<h1>sf::Drawable Class Reference<br/>
<small>
[<a class="el" href="group__graphics.htm">Graphics module</a>]</small>
</h1><!-- doxytag: class="sf::Drawable" -->
<p>Abstract base class for objects that can be drawn to a render target.  
<a href="#_details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Drawable_8hpp_source.htm">Drawable.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for sf::Drawable:</div>
<div class="dynsection">
 <div class="center">
  <img src="classsf_1_1Drawable.png" usemap="#sf::Drawable_map" alt=""/>
  <map id="sf::Drawable_map" name="sf::Drawable_map">
<area href="classsf_1_1Shape.htm" alt="sf::Shape" shape="rect" coords="130,56,250,80"/>
<area href="classsf_1_1Sprite.htm" alt="sf::Sprite" shape="rect" coords="260,56,380,80"/>
<area href="classsf_1_1Text.htm" alt="sf::Text" shape="rect" coords="390,56,510,80"/>
<area href="classsf_1_1VertexArray.htm" alt="sf::VertexArray" shape="rect" coords="520,56,640,80"/>
<area href="classsf_1_1CircleShape.htm" alt="sf::CircleShape" shape="rect" coords="0,112,120,136"/>
<area href="classsf_1_1ConvexShape.htm" alt="sf::ConvexShape" shape="rect" coords="130,112,250,136"/>
<area href="classsf_1_1RectangleShape.htm" alt="sf::RectangleShape" shape="rect" coords="260,112,380,136"/>
</map>
 </div>
</div>

<p><a href="classsf_1_1Drawable-members.htm">List of all members.</a></p>
<table border="0" cellpadding="0" cellspacing="0">
<tr><td colspan="2"><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#a906002f2df7beb5edbddf5bbef96f120">~Drawable</a> ()</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Virtual destructor.  <a href="#a906002f2df7beb5edbddf5bbef96f120"></a><br/></td></tr>
<tr><td colspan="2"><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm#a90d2c88bba9b035a0844eccb380ef631">draw</a> (<a class="el" href="classsf_1_1RenderTarget.htm">RenderTarget</a> &amp;target, <a class="el" href="classsf_1_1RenderStates.htm">RenderStates</a> states) const =0</td></tr>
<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Draw the object to a render target.  <a href="#a90d2c88bba9b035a0844eccb380ef631"></a><br/></td></tr>
<tr><td colspan="2"><h2>Friends</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa5afc6f82b7b587ed5ada4d227ce32aa"></a><!-- doxytag: member="sf::Drawable::RenderTarget" ref="aa5afc6f82b7b587ed5ada4d227ce32aa" args="" -->
class&nbsp;</td><td class="memItemRight" valign="bottom"><b>RenderTarget</b></td></tr>
</table>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<p>Abstract base class for objects that can be drawn to a render target. </p>
<p><a class="el" href="classsf_1_1Drawable.htm" title="Abstract base class for objects that can be drawn to a render target.">sf::Drawable</a> is a very simple base class that allows objects of derived classes to be drawn to a <a class="el" href="classsf_1_1RenderTarget.htm" title="Base class for all render targets (window, texture, .">sf::RenderTarget</a>.</p>
<p>All you have to do in your derived class is to override the draw virtual function.</p>
<p>Note that inheriting from <a class="el" href="classsf_1_1Drawable.htm" title="Abstract base class for objects that can be drawn to a render target.">sf::Drawable</a> is not mandatory, but it allows this nice syntax "window.draw(object)" rather than "object.draw(window)", which is more consistent with other SFML classes.</p>
<p>Example: </p>
<div class="fragment"><pre class="fragment"> <span class="keyword">class </span>MyDrawable : <span class="keyword">public</span> sf::Drawable
 {
 <span class="keyword">public</span> :

    ...

 <span class="keyword">private</span> :

     <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1Drawable.htm#a90d2c88bba9b035a0844eccb380ef631" title="Draw the object to a render target.">draw</a>(<a class="code" href="classsf_1_1RenderTarget.htm" title="Base class for all render targets (window, texture, .">sf::RenderTarget</a>&amp; target, RenderStates states)<span class="keyword"> const</span>
<span class="keyword">     </span>{
         <span class="comment">// You can draw other high-level objects</span>
         target.<a class="code" href="classsf_1_1RenderTarget.htm#a12417a3bcc245c41d957b29583556f39" title="Draw a drawable object to the render-target.">draw</a>(m_sprite, states);

         <span class="comment">// ... or use the low-level API</span>
         states.texture = &amp;m_texture;
         target.<a class="code" href="classsf_1_1RenderTarget.htm#a12417a3bcc245c41d957b29583556f39" title="Draw a drawable object to the render-target.">draw</a>(m_vertices, states);

         <span class="comment">// ... or draw with OpenGL directly</span>
         glBegin(GL_QUADS);
         ...
         glEnd();
     }

     <a class="code" href="classsf_1_1Sprite.htm" title="Drawable representation of a texture, with its own transformations, color, etc.">sf::Sprite</a> m_sprite;
     <a class="code" href="classsf_1_1Texture.htm" title="Image living on the graphics card that can be used for drawing.">sf::Texture</a> m_texture;
     <a class="code" href="classsf_1_1VertexArray.htm" title="Define a set of one or more 2D primitives.">sf::VertexArray</a> m_vertices;
 };
</pre></div><dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classsf_1_1RenderTarget.htm" title="Base class for all render targets (window, texture, .">sf::RenderTarget</a> </dd></dl>

<p>Definition at line <a class="el" href="Drawable_8hpp_source.htm#l00044">44</a> of file <a class="el" href="Drawable_8hpp_source.htm">Drawable.hpp</a>.</p>
<hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a906002f2df7beb5edbddf5bbef96f120"></a><!-- doxytag: member="sf::Drawable::~Drawable" ref="a906002f2df7beb5edbddf5bbef96f120" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual sf::Drawable::~Drawable </td>
          <td>(</td>
          <td class="paramname"></td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Virtual destructor. </p>

<p>Definition at line <a class="el" href="Drawable_8hpp_source.htm#l00052">52</a> of file <a class="el" href="Drawable_8hpp_source.htm">Drawable.hpp</a>.</p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a90d2c88bba9b035a0844eccb380ef631"></a><!-- doxytag: member="sf::Drawable::draw" ref="a90d2c88bba9b035a0844eccb380ef631" args="(RenderTarget &amp;target, RenderStates states) const =0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void sf::Drawable::draw </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classsf_1_1RenderTarget.htm">RenderTarget</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsf_1_1RenderStates.htm">RenderStates</a>&nbsp;</td>
          <td class="paramname"> <em>states</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const<code> [protected, pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Draw the object to a render target. </p>
<p>This is a pure virtual function that has to be implemented by the derived class to define how the drawable should be drawn.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>target</em>&nbsp;</td><td>Render target to draw to </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>states</em>&nbsp;</td><td>Current render states </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Drawable_8hpp_source.htm">Drawable.hpp</a></li>
</ul>
</div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
